//@GeneratedCode
namespace QTPriceChecker.AspMvc.Models.App
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class PriceHistory
    {
        ///
        /// Generated by the generator
        ///
        static PriceHistory()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public PriceHistory()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.Int32 SupplierXProductId
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.DateTime From
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.Decimal Price
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public QTPriceChecker.AspMvc.Models.Base.ProductXSupplier? SupplierXProduct
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public static QTPriceChecker.AspMvc.Models.App.PriceHistory Create()
        {
            BeforeCreate();
            var result = new QTPriceChecker.AspMvc.Models.App.PriceHistory();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTPriceChecker.AspMvc.Models.App.PriceHistory Create(object other)
        {
            BeforeCreate(other);
            CommonBase.Extensions.ObjectExtensions.CheckArgument(other, nameof(other));
            var result = new QTPriceChecker.AspMvc.Models.App.PriceHistory();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTPriceChecker.AspMvc.Models.App.PriceHistory instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTPriceChecker.AspMvc.Models.App.PriceHistory instance, object other);
        ///
        /// Generated by the generator
        ///
        public static QTPriceChecker.AspMvc.Models.App.PriceHistory Create(QTPriceChecker.Logic.Entities.App.PriceHistory other)
        {
            BeforeCreate(other);
            var result = new QTPriceChecker.AspMvc.Models.App.PriceHistory();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate(QTPriceChecker.Logic.Entities.App.PriceHistory other);
        static partial void AfterCreate(QTPriceChecker.AspMvc.Models.App.PriceHistory instance, QTPriceChecker.Logic.Entities.App.PriceHistory other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTPriceChecker.Logic.Entities.App.PriceHistory other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                SupplierXProductId = other.SupplierXProductId;
                From = other.From;
                Price = other.Price;
                SupplierXProduct = other.SupplierXProduct != null ? QTPriceChecker.AspMvc.Models.Base.ProductXSupplier.Create((object)other.SupplierXProduct) : null;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTPriceChecker.Logic.Entities.App.PriceHistory other, ref bool handled);
        partial void AfterCopyProperties(QTPriceChecker.Logic.Entities.App.PriceHistory other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTPriceChecker.AspMvc.Models.App.PriceHistory other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                SupplierXProductId = other.SupplierXProductId;
                From = other.From;
                Price = other.Price;
                SupplierXProduct = other.SupplierXProduct;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTPriceChecker.AspMvc.Models.App.PriceHistory other, ref bool handled);
        partial void AfterCopyProperties(QTPriceChecker.AspMvc.Models.App.PriceHistory other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.App.PriceHistory other)
            {
                result = IsEqualsWith(RowVersion, other.RowVersion)
                && Id == other.Id;
            }
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return HashCode.Combine(SupplierXProductId, From, Price, SupplierXProduct, RowVersion, Id);
        }
    }
}
