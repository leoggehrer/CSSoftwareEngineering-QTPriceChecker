//@GeneratedCode
namespace QTPriceChecker.AspMvc.Models.Base
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class ProductXSupplierFilter : Models.View.IFilterModel
    {
        ///
        /// Generated by the generator
        ///
        static ProductXSupplierFilter()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public ProductXSupplierFilter()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.Int32? SupplierId
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.Int32? ProductId
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.Decimal? MinPrice
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.Decimal? MaxPrice
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.Decimal? CurrentPrice
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public bool HasEntityValue => SupplierId != null || ProductId != null || MinPrice != null || MaxPrice != null || CurrentPrice != null;
        private bool show = true;
        ///
        /// Generated by the generator
        ///
        public bool Show => show;
        ///
        /// Generated by the generator
        ///
        public string CreateEntityPredicate()
        {
            var result = new System.Text.StringBuilder();
            if (SupplierId != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(SupplierId != null && SupplierId == {SupplierId})");
            }
            if (ProductId != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(ProductId != null && ProductId == {ProductId})");
            }
            if (MinPrice != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(MinPrice != null && MinPrice == {MinPrice})");
            }
            if (MaxPrice != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(MaxPrice != null && MaxPrice == {MaxPrice})");
            }
            if (CurrentPrice != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(CurrentPrice != null && CurrentPrice == {CurrentPrice})");
            }
            return result.ToString();
        }
        ///
        /// Generated by the generator
        ///
        public override string ToString()
        {
            return $"SupplierId: {(SupplierId != null ? SupplierId : "---")} ProductId: {(ProductId != null ? ProductId : "---")} MinPrice: {(MinPrice != null ? MinPrice : "---")} MaxPrice: {(MaxPrice != null ? MaxPrice : "---")} CurrentPrice: {(CurrentPrice != null ? CurrentPrice : "---")} ";
        }
    }
}
