//@GeneratedCode
namespace QTPriceChecker.WebApi.Controllers.Base
{
    ///
    /// Generated by the generator
    ///
    public sealed partial class SuppliersController : Controllers.GenericController<QTPriceChecker.Logic.Entities.Base.Supplier, QTPriceChecker.WebApi.Models.Base.SupplierEdit, QTPriceChecker.WebApi.Models.Base.Supplier>
    {
        ///
        /// Generated by the generator
        ///
        static SuppliersController()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public SuppliersController(QTPriceChecker.Logic.Contracts.Base.ISuppliersAccess<QTPriceChecker.Logic.Entities.Base.Supplier> other)
        : base(other)
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        protected override QTPriceChecker.WebApi.Models.Base.Supplier ToOutModel(QTPriceChecker.Logic.Entities.Base.Supplier accessModel)
        {
            var handled = false;
            var result = default(QTPriceChecker.WebApi.Models.Base.Supplier);
            BeforeToOutModel(accessModel, ref result, ref handled);
            if (handled == false || result == null)
            {
                result = QTPriceChecker.WebApi.Models.Base.Supplier.Create(accessModel);
            }
            AfterToOutModel(result);
            return result;
        }
        partial void BeforeToOutModel(QTPriceChecker.Logic.Entities.Base.Supplier accessModel, ref QTPriceChecker.WebApi.Models.Base.Supplier? outModel, ref bool handled);
        partial void AfterToOutModel(QTPriceChecker.WebApi.Models.Base.Supplier outModel);
    }
}
